package main

const (
	/*
		ERROR									   CODE		RETRIABLE DESCRIPTION
	*/
	UNKNOWN_SERVER_ERROR                  int16 = -1  //	False	The server experienced an unexpected error when processing the request.
	NONE                                  int16 = 0   //	False
	OFFSET_OUT_OF_RANGE                   int16 = 1   //	False	The requested offset is not within the range of offsets maintained by the server.
	CORRUPT_MESSAGE                       int16 = 2   //	True	This message has failed its CRC checksum, exceeds the valid size, has a null key for a compacted topic, or is otherwise corrupt.
	UNKNOWN_TOPIC_OR_PARTITION            int16 = 3   //	True	This server does not host this topic-partition.
	INVALID_FETCH_SIZE                    int16 = 4   //	False	The requested fetch size is invalid.
	LEADER_NOT_AVAILABLE                  int16 = 5   //	True	There is no leader for this topic-partition as we are in the middle of a leadership election.
	NOT_LEADER_OR_FOLLOWER                int16 = 6   //	True	For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.
	REQUEST_TIMED_OUT                     int16 = 7   //	True	The request timed out.
	BROKER_NOT_AVAILABLE                  int16 = 8   //	False	The broker is not available.
	REPLICA_NOT_AVAILABLE                 int16 = 9   //	True	The replica is not available for the requested topic-partition. Produce/Fetch requests and other requests intended only for the leader or follower return NOT_LEADER_OR_FOLLOWER if the broker is not a replica of the topic-partition.
	MESSAGE_TOO_LARGE                     int16 = 10  //	False	The request included a message larger than the max message size the server will accept.
	STALE_CONTROLLER_EPOCH                int16 = 11  //	False	The controller moved to another broker.
	OFFSET_METADATA_TOO_LARGE             int16 = 12  //	False	The metadata field of the offset request was too large.
	NETWORK_EXCEPTION                     int16 = 13  //	True	The server disconnected before a response was received.
	COORDINATOR_LOAD_IN_PROGRESS          int16 = 14  //	True	The coordinator is loading and hence can't process requests.
	COORDINATOR_NOT_AVAILABLE             int16 = 15  //	True	The coordinator is not available.
	NOT_COORDINATOR                       int16 = 16  //	True	This is not the correct coordinator.
	INVALID_TOPIC_EXCEPTION               int16 = 17  //	False	The request attempted to perform an operation on an invalid topic.
	RECORD_LIST_TOO_LARGE                 int16 = 18  //	False	The request included message batch larger than the configured segment size on the server.
	NOT_ENOUGH_REPLICAS                   int16 = 19  //	True	Messages are rejected since there are fewer in-sync replicas than required.
	NOT_ENOUGH_REPLICAS_AFTER_APPEND      int16 = 20  //	True	Messages are written to the log, but to fewer in-sync replicas than required.
	INVALID_REQUIRED_ACKS                 int16 = 21  //	False	Produce request specified an invalid value for required acks.
	ILLEGAL_GENERATION                    int16 = 22  //	False	Specified group generation id is not valid.
	INCONSISTENT_GROUP_PROTOCOL           int16 = 23  //	False	The group member's supported protocols are incompatible with those of existing members or first group member tried to join with empty protocol type or empty protocol list.
	INVALID_GROUP_ID                      int16 = 24  //	False	The configured groupId is invalid.
	UNKNOWN_MEMBER_ID                     int16 = 25  //	False	The coordinator is not aware of this member.
	INVALID_SESSION_TIMEOUT               int16 = 26  //	False	The session timeout is not within the range allowed by the broker (as configured by group.min.session.timeout.ms and group.max.session.timeout.ms).
	REBALANCE_IN_PROGRESS                 int16 = 27  //	False	The group is rebalancing, so a rejoin is needed.
	INVALID_COMMIT_OFFSET_SIZE            int16 = 28  //	False	The committing offset data size is not valid.
	TOPIC_AUTHORIZATION_FAILED            int16 = 29  //	False	Topic authorization failed.
	GROUP_AUTHORIZATION_FAILED            int16 = 30  //	False	Group authorization failed.
	CLUSTER_AUTHORIZATION_FAILED          int16 = 31  //	False	Cluster authorization failed.
	INVALID_TIMESTAMP                     int16 = 32  //	False	The timestamp of the message is out of acceptable range.
	UNSUPPORTED_SASL_MECHANISM            int16 = 33  //	False	The broker does not support the requested SASL mechanism.
	ILLEGAL_SASL_STATE                    int16 = 34  //	False	Request is not valid given the current SASL state.
	UNSUPPORTED_VERSION                   int16 = 35  //	False	The version of API is not supported.
	TOPIC_ALREADY_EXISTS                  int16 = 36  //	False	Topic with this name already exists.
	INVALID_PARTITIONS                    int16 = 37  //	False	Number of partitions is below 1.
	INVALID_REPLICATION_FACTOR            int16 = 38  //	False	Replication factor is below 1 or larger than the number of available brokers.
	INVALID_REPLICA_ASSIGNMENT            int16 = 39  //	False	Replica assignment is invalid.
	INVALID_CONFIG                        int16 = 40  //	False	Configuration is invalid.
	NOT_CONTROLLER                        int16 = 41  //	True	This is not the correct controller for this cluster.
	INVALID_REQUEST                       int16 = 42  //	False	This most likely occurs because of a request being malformed by the client library or the message was sent to an incompatible broker. See the broker logs for more details.
	UNSUPPORTED_FOR_MESSAGE_FORMAT        int16 = 43  //	False	The message format version on the broker does not support the request.
	POLICY_VIOLATION                      int16 = 44  //	False	Request parameters do not satisfy the configured policy.
	OUT_OF_ORDER_SEQUENCE_NUMBER          int16 = 45  //	False	The broker received an out of order sequence number.
	DUPLICATE_SEQUENCE_NUMBER             int16 = 46  //	False	The broker received a duplicate sequence number.
	INVALID_PRODUCER_EPOCH                int16 = 47  //	False	Producer attempted to produce with an old epoch.
	INVALID_TXN_STATE                     int16 = 48  //	False	The producer attempted a transactional operation in an invalid state.
	INVALID_PRODUCER_ID_MAPPING           int16 = 49  //	False	The producer attempted to use a producer id which is not currently assigned to its transactional id.
	INVALID_TRANSACTION_TIMEOUT           int16 = 50  //	False	The transaction timeout is larger than the maximum value allowed by the broker (as configured by transaction.max.timeout.ms).
	CONCURRENT_TRANSACTIONS               int16 = 51  //	True	The producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing.
	TRANSACTION_COORDINATOR_FENCED        int16 = 52  //	False	Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer.
	TRANSACTIONAL_ID_AUTHORIZATION_FAILED int16 = 53  //	False	Transactional Id authorization failed.
	SECURITY_DISABLED                     int16 = 54  //	False	Security features are disabled.
	OPERATION_NOT_ATTEMPTED               int16 = 55  //	False	The broker did not attempt to execute this operation. This may happen for batched RPCs where some operations in the batch failed, causing the broker to respond without trying the rest.
	KAFKA_STORAGE_ERROR                   int16 = 56  //	True	Disk error when trying to access log file on the disk.
	LOG_DIR_NOT_FOUND                     int16 = 57  //	False	The user-specified log directory is not found in the broker config.
	SASL_AUTHENTICATION_FAILED            int16 = 58  //	False	SASL Authentication failed.
	UNKNOWN_PRODUCER_ID                   int16 = 59  //	False	This exception is raised by the broker if it could not locate the producer metadata associated with the producerId in question. This could happen if, for instance, the producer's records were deleted because their retention time had elapsed. Once the last records of the producerId are removed, the producer's metadata is removed from the broker, and future appends by the producer will return this exception.
	REASSIGNMENT_IN_PROGRESS              int16 = 60  //	False	A partition reassignment is in progress.
	DELEGATION_TOKEN_AUTH_DISABLED        int16 = 61  //	False	Delegation Token feature is not enabled.
	DELEGATION_TOKEN_NOT_FOUND            int16 = 62  //	False	Delegation Token is not found on server.
	DELEGATION_TOKEN_OWNER_MISMATCH       int16 = 63  //	False	Specified Principal is not valid Owner/Renewer.
	DELEGATION_TOKEN_REQUEST_NOT_ALLOWED  int16 = 64  //	False	Delegation Token requests are not allowed on PLAINTEXT/1-way SSL channels and on delegation token authenticated channels.
	DELEGATION_TOKEN_AUTHORIZATION_FAILED int16 = 65  //	False	Delegation Token authorization failed.
	DELEGATION_TOKEN_EXPIRED              int16 = 66  //	False	Delegation Token is expired.
	INVALID_PRINCIPAL_TYPE                int16 = 67  //	False	Supplied principalType is not supported.
	NON_EMPTY_GROUP                       int16 = 68  //	False	The group is not empty.
	GROUP_ID_NOT_FOUND                    int16 = 69  //	False	The group id does not exist.
	FETCH_SESSION_ID_NOT_FOUND            int16 = 70  //	True	The fetch session ID was not found.
	INVALID_FETCH_SESSION_EPOCH           int16 = 71  //	True	The fetch session epoch is invalid.
	LISTENER_NOT_FOUND                    int16 = 72  //	True	There is no listener on the leader broker that matches the listener on which metadata request was processed.
	TOPIC_DELETION_DISABLED               int16 = 73  //	False	Topic deletion is disabled.
	FENCED_LEADER_EPOCH                   int16 = 74  //	True	The leader epoch in the request is older than the epoch on the broker.
	UNKNOWN_LEADER_EPOCH                  int16 = 75  //	True	The leader epoch in the request is newer than the epoch on the broker.
	UNSUPPORTED_COMPRESSION_TYPE          int16 = 76  //	False	The requesting client does not support the compression type of given partition.
	STALE_BROKER_EPOCH                    int16 = 77  //	False	Broker epoch has changed.
	OFFSET_NOT_AVAILABLE                  int16 = 78  //	True	The leader high watermark has not caught up from a recent leader election so the offsets cannot be guaranteed to be monotonically increasing.
	MEMBER_ID_REQUIRED                    int16 = 79  //	False	The group member needs to have a valid member id before actually entering a consumer group.
	PREFERRED_LEADER_NOT_AVAILABLE        int16 = 80  //	True	The preferred leader was not available.
	GROUP_MAX_SIZE_REACHED                int16 = 81  //	False	The consumer group has reached its max size.
	FENCED_INSTANCE_ID                    int16 = 82  //	False	The broker rejected this static consumer since another consumer with the same group.instance.id has registered with a different member.id.
	ELIGIBLE_LEADERS_NOT_AVAILABLE        int16 = 83  //	True	Eligible topic partition leaders are not available.
	ELECTION_NOT_NEEDED                   int16 = 84  //	True	Leader election not needed for topic partition.
	NO_REASSIGNMENT_IN_PROGRESS           int16 = 85  //	False	No partition reassignment is in progress.
	GROUP_SUBSCRIBED_TO_TOPIC             int16 = 86  //	False	Deleting offsets of a topic is forbidden while the consumer group is actively subscribed to it.
	INVALID_RECORD                        int16 = 87  //	False	This record has failed the validation on broker and hence will be rejected.
	UNSTABLE_OFFSET_COMMIT                int16 = 88  //	True	There are unstable offsets that need to be cleared.
	THROTTLING_QUOTA_EXCEEDED             int16 = 89  //	True	The throttling quota has been exceeded.
	PRODUCER_FENCED                       int16 = 90  //	False	There is a newer producer with the same transactionalId which fences the current one.
	RESOURCE_NOT_FOUND                    int16 = 91  //	False	A request illegally referred to a resource that does not exist.
	DUPLICATE_RESOURCE                    int16 = 92  //	False	A request illegally referred to the same resource twice.
	UNACCEPTABLE_CREDENTIAL               int16 = 93  //	False	Requested credential would not meet criteria for acceptability.
	INCONSISTENT_VOTER_SET                int16 = 94  //	False	Indicates that the either the sender or recipient of a voter-only request is not one of the expected voters.
	INVALID_UPDATE_VERSION                int16 = 95  //	False	The given update version was invalid.
	FEATURE_UPDATE_FAILED                 int16 = 96  //	False	Unable to update finalized features due to an unexpected server error.
	PRINCIPAL_DESERIALIZATION_FAILURE     int16 = 97  //	False	Request principal deserialization failed during forwarding. This indicates an internal error on the broker cluster security setup.
	SNAPSHOT_NOT_FOUND                    int16 = 98  //	False	Requested snapshot was not found.
	POSITION_OUT_OF_RANGE                 int16 = 99  //	False	Requested position is not greater than or equal to zero, and less than the size of the snapshot.
	UNKNOWN_TOPIC_ID                      int16 = 100 //	True	This server does not host this topic ID.
	DUPLICATE_BROKER_REGISTRATION         int16 = 101 //	False	This broker ID is already in use.
	BROKER_ID_NOT_REGISTERED              int16 = 102 //	False	The given broker ID was not registered.
	INCONSISTENT_TOPIC_ID                 int16 = 103 //	True	The log's topic ID did not match the topic ID in the request.
	INCONSISTENT_CLUSTER_ID               int16 = 104 //	False	The clusterId in the request does not match that found on the server.
	TRANSACTIONAL_ID_NOT_FOUND            int16 = 105 //	False	The transactionalId could not be found.
	FETCH_SESSION_TOPIC_ID_ERROR          int16 = 106 //	True	The fetch session encountered inconsistent topic ID usage.
	INELIGIBLE_REPLICA                    int16 = 107 //	False	The new ISR contains at least one ineligible replica.
	NEW_LEADER_ELECTED                    int16 = 108 //	False	The AlterPartition request successfully updated the partition state but the leader has changed.
	OFFSET_MOVED_TO_TIERED_STORAGE        int16 = 109 //	False	The requested offset is moved to tiered storage.
	FENCED_MEMBER_EPOCH                   int16 = 110 //	False	The member epoch is fenced by the group coordinator. The member must abandon all its partitions and rejoin.
	UNRELEASED_INSTANCE_ID                int16 = 111 //	False	The instance ID is still used by another member in the consumer group. That member must leave first.
	UNSUPPORTED_ASSIGNOR                  int16 = 112 //	False	The assignor or its version range is not supported by the consumer group.
	STALE_MEMBER_EPOCH                    int16 = 113 //	False	The member epoch is stale. The member must retry after receiving its updated member epoch via the ConsumerGroupHeartbeat API.
	MISMATCHED_ENDPOINT_TYPE              int16 = 114 //	False	The request was sent to an endpoint of the wrong type.
	UNSUPPORTED_ENDPOINT_TYPE             int16 = 115 //	False	This endpoint type is not supported yet.
	UNKNOWN_CONTROLLER_ID                 int16 = 116 //	False	This controller ID is not known.
	UNKNOWN_SUBSCRIPTION_ID               int16 = 117 //	False	Client sent a push telemetry request with an invalid or outdated subscription ID.
	TELEMETRY_TOO_LARGE                   int16 = 118 //	False	Client sent a push telemetry request larger than the maximum size the broker will accept.
	INVALID_REGISTRATION                  int16 = 119 //	False	The controller has considered the broker registration to be invalid.
	TRANSACTION_ABORTABLE                 int16 = 120 //	False	The server encountered an error with the transaction. The client can abort the transaction to continue using this transactional ID.
	INVALID_RECORD_STATE                  int16 = 121 //	False	The record state is invalid. The acknowledgement of delivery could not be completed.
	SHARE_SESSION_NOT_FOUND               int16 = 122 //	True	The share session was not found.
	INVALID_SHARE_SESSION_EPOCH           int16 = 123 //	True	The share session epoch is invalid.
	FENCED_STATE_EPOCH                    int16 = 124 //	False	The share coordinator rejected the request because the share-group state epoch did not match.
	INVALID_VOTER_KEY                     int16 = 125 //	False	The voter key doesn't match the receiving replica's key.
	DUPLICATE_VOTER                       int16 = 126 //	False	The voter is already part of the set of voters.
	VOTER_NOT_FOUND                       int16 = 127 //	False	The voter is not part of the set of voters.
	INVALID_REGULAR_EXPRESSION            int16 = 128 //	False	The regular expression is not valid.
	REBOOTSTRAP_REQUIRED                  int16 = 129 //	False	Client metadata is stale, client should rebootstrap to obtain new metadata.
)
